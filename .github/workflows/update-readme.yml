name: Update README

on:
  push:
    branches: [main]
  schedule:
    - cron: "0 6 * * *"  # Daily at 6 AM
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Generate Dynamic README with GitHub API
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create advanced Node.js script for dynamic README generation
          cat > generate-readme.js << 'EOF'
          const https = require('https');
          const fs = require('fs');
          
          const GITHUB_USERNAME = 'dacrab';
          const GITHUB_TOKEN = process.env.GITHUB_TOKEN;
          
          function makeRequest(url) {
            return new Promise((resolve, reject) => {
              const options = {
                headers: {
                  'User-Agent': 'Dynamic-README-Generator',
                  'Authorization': `token ${GITHUB_TOKEN}`,
                  'Accept': 'application/vnd.github.v3+json'
                }
              };
              
              https.get(url, options, (res) => {
                let data = '';
                res.on('data', chunk => data += chunk);
                res.on('end', () => {
                  try {
                    resolve(JSON.parse(data));
                  } catch (e) {
                    console.warn(`Parse error for ${url}:`, e.message);
                    resolve({ error: e.message });
                  }
                });
              }).on('error', reject);
            });
          }
          
          function formatTimeAgo(date) {
            const now = new Date();
            const diff = now - new Date(date);
            const days = Math.floor(diff / (1000 * 60 * 60 * 24));
            const hours = Math.floor(diff / (1000 * 60 * 60));
            
            if (days > 30) return `${Math.floor(days/30)} month${Math.floor(days/30) === 1 ? '' : 's'} ago`;
            if (days > 0) return `${days} day${days === 1 ? '' : 's'} ago`;
            if (hours > 0) return `${hours} hour${hours === 1 ? '' : 's'} ago`;
            return 'Recently';
          }
          
          function getLanguageEmoji(language) {
            const langEmojis = {
              'JavaScript': '🟨', 'TypeScript': '🔷', 'Python': '🐍', 'Java': '☕',
              'React': '⚛️', 'Vue': '💚', 'Angular': '🅰️', 'Node.js': '💚',
              'HTML': '🌐', 'CSS': '🎨', 'SCSS': '💜', 'PHP': '🐘',
              'Go': '🔵', 'Rust': '🦀', 'C++': '⚡', 'C#': '💜',
              'Shell': '🐚', 'Dockerfile': '🐳', 'Markdown': '📝'
            };
            return langEmojis[language] || '📁';
          }
          
          async function generateReadme() {
            try {
              console.log('🚀 Fetching GitHub data...');
              
              // Fetch multiple data sources concurrently
              const [user, repos, events, starred] = await Promise.all([
                makeRequest(`https://api.github.com/users/${GITHUB_USERNAME}`),
                makeRequest(`https://api.github.com/users/${GITHUB_USERNAME}/repos?sort=updated&per_page=20`),
                makeRequest(`https://api.github.com/users/${GITHUB_USERNAME}/events/public?per_page=10`),
                makeRequest(`https://api.github.com/users/${GITHUB_USERNAME}/starred?per_page=5`)
              ]);
              
              // Process repos data
              const activeRepos = Array.isArray(repos) 
                ? repos.filter(repo => !repo.fork && repo.description && !repo.private)
                    .sort((a, b) => new Date(b.updated_at) - new Date(a.updated_at))
                : [];
              
              const topRepos = activeRepos.slice(0, 6);
              const recentlyUpdated = activeRepos.slice(0, 5);
              
              // Process recent activity
              const recentActivity = Array.isArray(events) 
                ? events.filter(event => ['PushEvent', 'CreateEvent', 'IssuesEvent', 'PullRequestEvent'].includes(event.type))
                    .slice(0, 5)
                : [];
              
              // Process starred repos
              const recentStars = Array.isArray(starred) ? starred.slice(0, 4) : [];
              
              // Calculate stats
              const totalStars = activeRepos.reduce((sum, repo) => sum + (repo.stargazers_count || 0), 0);
              const totalForks = activeRepos.reduce((sum, repo) => sum + (repo.forks_count || 0), 0);
              const languages = [...new Set(activeRepos.map(repo => repo.language).filter(Boolean))];
              
              // Generate current time
              const now = new Date();
              const timeString = now.toLocaleString('en-US', { 
                weekday: 'long',
                year: 'numeric', 
                month: 'long', 
                day: 'numeric',
                hour: '2-digit',
                minute: '2-digit',
                timeZone: 'Europe/Athens'
              });
              
              const readme = `# Hello World! 👋 I'm Vaggelis Kavouras
          
          <div align="center">
          
          [![Typing SVG](https://readme-typing-svg.herokuapp.com?font=Fira+Code&size=22&duration=3000&pause=1000&color=58A6FF&center=true&vCenter=true&width=600&lines=Full+Stack+Developer+from+Greece+🇬🇷;Building+Modern+Web+Applications;Always+Learning+%26+Shipping!;TypeScript+%7C+React+%7C+Next.js+Enthusiast)](https://github.com/dacrab)
          
          </div>
          
          ---
          
          ## 🚀 About Me
          
          I'm a **solo developer** from 🇬🇷 **Greece** passionate about crafting modern, type-safe web applications. My journey started with **C** and static websites, and now I build full-stack, real-time applications using cutting-edge technologies.
          
          - 🔭 Currently working on **${recentlyUpdated[0]?.name || 'exciting projects'}**
          - 🌱 Learning advanced **TypeScript patterns** and **system design**
          - 💡 Love **clean code**, **scalable architecture**, and **developer experience**
          - 🎯 Always shipping **production-ready** applications
          - 📍 Based in **Greece** 🇬🇷
          
          ---
          
          ## 🛠️ Tech Stack & Tools
          
          <div align="center">
          
          ![Supabase](https://img.shields.io/badge/Supabase-3ECF8E?style=for-the-badge&logo=supabase&logoColor=white)
          ![Next.js](https://img.shields.io/badge/Next.js-000000?style=for-the-badge&logo=next.js&logoColor=white)
          ![React](https://img.shields.io/badge/React-20232A?style=for-the-badge&logo=react&logoColor=61DAFB)
          ![TypeScript](https://img.shields.io/badge/TypeScript-3178C6?style=for-the-badge&logo=typescript&logoColor=white)
          ![Tailwind CSS](https://img.shields.io/badge/TailwindCSS-06B6D4?style=for-the-badge&logo=tailwind-css&logoColor=white)
          ![Vite](https://img.shields.io/badge/Vite-646CFF?style=for-the-badge&logo=vite&logoColor=white)
          ![shadcn/ui](https://img.shields.io/badge/shadcn/ui-000000?style=for-the-badge&logo=shadcn&logoColor=white)
          
          </div>
          
          ---
          
          ## 📊 GitHub Analytics
          
          <div align="center">
          
          ![GitHub Metrics](https://raw.githubusercontent.com/dacrab/dacrab/main/github-metrics.svg)
          
          </div>
          
          <div align="center">
          
          | 📈 **GitHub Stats** | 🔥 **Streak Stats** | 🌐 **Languages** |
          |:---:|:---:|:---:|
          | [![GitHub stats](https://github-readme-stats.vercel.app/api?username=dacrab&show_icons=true&theme=tokyonight&hide_border=true&bg_color=0D1117&title_color=58A6FF&text_color=C3D1D9&icon_color=58A6FF)](https://github.com/dacrab) | [![GitHub Streak](https://github-readme-streak-stats.herokuapp.com/?user=dacrab&theme=tokyonight&hide_border=true&background=0D1117&stroke=58A6FF&ring=58A6FF&fire=FF6B6B&currStreakLabel=58A6FF)](https://github.com/dacrab) | [![Top Languages](https://github-readme-stats.vercel.app/api/top-langs/?username=dacrab&layout=compact&theme=tokyonight&hide_border=true&bg_color=0D1117&title_color=58A6FF&text_color=C3D1D9)](https://github.com/dacrab) |
          
          </div>
          
          ---
          
          ## 🏗️ Featured Projects
          
          <table>
          <tr>
          <td width="50%">
          
          ### 🎯 [Argicon](https://argicon.gr)
          **Architecture Studio Website**
          
          \`\`\`typescript
          Tech: Next.js + Framer Motion + i18n
          Features: Multilingual, Animations, Modern UI
          \`\`\`
          
          </td>
          <td width="50%">
          
          ### 🧱 [DesignDash](https://designdash.gr)
          **Architecture Portfolio**
          
          \`\`\`typescript
          Tech: Next.js + Tailwind CSS + Dark Mode
          Features: Responsive, Portfolio Gallery
          \`\`\`
          
          </td>
          </tr>
          <tr>
          <td width="50%">
          
          ### 🧑‍💼 [clubOS](https://clubos.vercel.app)
          **Sports Facility Management**
          
          \`\`\`typescript
          Tech: Real-time + RBAC + Analytics
          Features: POS System, Booking, Dashboard
          \`\`\`
          [![Repo](https://img.shields.io/badge/View_Code-100000?style=for-the-badge&logo=github&logoColor=white)](https://github.com/dacrab/clubos)
          
          </td>
          <td width="50%">
          
          ### 🌐 [Portfolio](https://dacrab.github.io/)
          **Personal Developer Site**
          
          \`\`\`typescript
          Tech: Next.js + TypeScript + TailwindCSS
          Features: Responsive, Modern, Fast
          \`\`\`
          [![Repo](https://img.shields.io/badge/View_Code-100000?style=for-the-badge&logo=github&logoColor=white)](https://github.com/dacrab/portfolio)
          
          </td>
          </tr>
          </table>
          
          ---
          
          ## 🔥 Recent Activity
          
          ### 📝 Latest Repository Updates
          ${recentlyUpdated.map((repo, i) => 
            `**${i + 1}.** [${repo.name}](${repo.html_url}) ${getLanguageEmoji(repo.language)} \`${repo.language || 'Misc'}\`  
          ${repo.description}  
          ⭐ ${repo.stargazers_count} · 🍴 ${repo.forks_count} · Updated ${formatTimeAgo(repo.updated_at)}`
          ).slice(0, 4).join('\n\n')}
          
          ### ⭐ Recently Starred
          ${recentStars.map(repo => 
            `- [**${repo.name}**](${repo.html_url}) by [${repo.owner.login}](${repo.owner.html_url}) ${getLanguageEmoji(repo.language)}  
            ${repo.description || 'No description available'}`
          ).join('\n')}
          
          ---
          
          ## 📊 Profile Stats
          
          <div align="center">
          
          | Metric | Value |
          |:---:|:---:|
          | 📚 **Public Repositories** | **${user.public_repos || 0}** |
          | 👥 **Followers** | **${user.followers || 0}** |
          | ➡️ **Following** | **${user.following || 0}** |
          | ⭐ **Total Stars Earned** | **${totalStars}** |
          | 🍴 **Total Forks** | **${totalForks}** |
          | 💻 **Languages Used** | **${languages.length}** |
          
          </div>
          
          ---
          
          ## 🤝 Let's Connect & Collaborate!
          
          <div align="center">
          
          [![Instagram](https://img.shields.io/badge/Instagram-E4405F?style=for-the-badge&logo=instagram&logoColor=white)](https://www.instagram.com/killcrb/)
          [![GitHub](https://img.shields.io/badge/GitHub-100000?style=for-the-badge&logo=github&logoColor=white)](https://github.com/dacrab)
          [![LinkedIn](https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&logo=linkedin&logoColor=white)](https://www.linkedin.com/in/vkavouras/)
          
          **💬 Open to collaborations and interesting projects!**
          
          </div>
          
          ---
          
          <div align="center">
          
          [![Activity Graph](https://github-readme-activity-graph.vercel.app/graph?username=dacrab&custom_title=Vaggelis's%20Activity%20Graph&bg_color=0D1117&color=58A6FF&line=58A6FF&point=FFFFFF&area=true&hide_border=true)](https://github.com/dacrab)
          
          </div>
          
          ---
          
          <div align="center">
          
          ### ✨ **"Code is poetry written in logic"** ✨
          
          ![Profile Views](https://komarev.com/ghpvc/?username=dacrab&style=for-the-badge&color=58A6FF)
          
          *🕒 Last updated: ${timeString} (Europe/Athens)*
          
          </div>`;
              
              fs.writeFileSync('README.md', readme);
              console.log('✅ Dynamic README generated successfully!');
              console.log(`📊 Processed ${activeRepos.length} repos, ${recentActivity.length} activities, ${recentStars.length} stars`);
              
            } catch (error) {
              console.error('❌ Error generating README:', error);
              process.exit(1);
            }
          }
          
          generateReadme();
          EOF
          
          # Run the enhanced script
          node generate-readme.js
          
      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: '📄 Auto-update README'
          file_pattern: 'README.md'
          commit_user_name: 'readme-bot'
          commit_user_email: 'actions@github.com'
