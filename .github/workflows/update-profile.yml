name: Update Profile Content & Metrics

on:
  # Schedule updates (every 6 hours)
  schedule: 
    - cron: "0 */6 * * *"
  # Allow manual triggering
  workflow_dispatch:
  # Trigger on pushes to main (but only if certain files change)
  push:
    branches: ["main", "master"]
    paths: 
      - 'config.js'
      - 'scripts/generate.js' 
      - 'README.gtpl'
      - '.github/workflows/update-profile.yml'

jobs:
  update-profile:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      
    concurrency:
      group: profile-update-${{ github.ref }}
      cancel-in-progress: true
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache
          key: ${{ runner.os }}-cache-${{ hashFiles('**/package-lock.json') }}
          
      - name: Install dependencies
        run: npm ci
        
      - name: Generate dynamic README content
        run: npm run generate
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          
      - name: Generate GitHub metrics SVG
        uses: lowlighter/metrics@latest
        with:
          # Your GitHub token with required scopes:
          # - public_access (default scope)
          # - read:user
          # - read:org  
          # - repo
          token: ${{ secrets.GH_PAT }}

          # Options
          user: dacrab
          template: classic
          base: header, activity, community, repositories, metadata
          config_timezone: Europe/Athens
          
          # Repositories configuration
          repositories_forks: yes
          repositories_affiliations: owner, collaborator, organization_member
          repositories_batch: 100
          repositories_skipped:
          
          # Activity configuration
          plugin_activity: yes
          plugin_activity_limit: 5
          plugin_activity_days: 14
          plugin_activity_visibility: all
          plugin_activity_timestamps: yes
          plugin_activity_filter: all
          
          # Languages plugin
          plugin_languages: yes
          plugin_languages_ignored: html, css, tex, less, dockerfile, makefile, qmake, lex, cmake, shell, gnuplot
          plugin_languages_limit: 8
          plugin_languages_sections: most-used, recently-used
          plugin_languages_colors: github
          plugin_languages_threshold: 0%
          plugin_languages_details: bytes-size, percentage, lines
          plugin_languages_analysis_timeout: 15
          plugin_languages_recent_days: 14
          plugin_languages_recent_load: 300
          
          # Additional plugins
          plugin_followup: yes
          plugin_followup_sections: repositories
          plugin_gists: yes
          
          # Debug mode
          debug: yes
          verify: yes
          
      - name: Check for changes
        id: git-check
        run: |
          git add .
          if git diff --cached --exit-code; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi
          
      - name: Commit and push updated files
        if: steps.git-check.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "üîÑ Auto-update profile content & metrics
          
          ‚ú® Updated:
          - Dynamic README content (working on, projects, PRs, stars, tech stack)
          - GitHub metrics SVG with latest activity and statistics
          
          Generated: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          
          # Fetch latest remote state and pull any changes before pushing
          git fetch origin
          git pull --rebase origin main || git pull --rebase origin master || true
          
          # Push with retry logic
          for i in {1..3}; do
            if git push; then
              echo "‚úÖ Push successful on attempt $i"
              break
            else
              echo "‚ö†Ô∏è Push failed on attempt $i, retrying..."
              git fetch origin
              git pull --rebase origin main || git pull --rebase origin master || true
              sleep 5
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
