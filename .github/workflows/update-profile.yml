name: Update Profile Metrics & README

on:
  # Update everything every 6 hours
  schedule: 
    - cron: "0 */6 * * *"
  # Allow manual triggering
  workflow_dispatch:
  # Trigger on pushes to main
  push:
    branches: ["main", "master"]

jobs:
  update-profile:
    runs-on: ubuntu-latest
    env:
      # Allow overriding username from repository variables or secrets; default to repo owner
      GH_USERNAME: ${{ vars.GH_USERNAME || secrets.GH_USERNAME || github.repository_owner }}
      GH_PAT: ${{ secrets.GH_PAT }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_TIMEZONE: ${{ vars.GH_TIMEZONE || 'Europe/Athens' }}
      WEBSITE_URL: ${{ vars.WEBSITE_URL }}
      LINKEDIN_URL: ${{ vars.LINKEDIN_URL }}
      INSTAGRAM_URL: ${{ vars.INSTAGRAM_URL }}
      WORKING_ON_LIMIT: ${{ vars.WORKING_ON_LIMIT }}
      LATEST_PROJECTS_LIMIT: ${{ vars.LATEST_PROJECTS_LIMIT }}
      PRS_DAYS: ${{ vars.PRS_DAYS }}
    
    permissions:
      contents: write
      
    concurrency:
      group: profile-update-${{ github.ref }}
      cancel-in-progress: true
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
          
      - name: Generate GitHub metrics SVG (consolidated)
        uses: lowlighter/metrics@latest
        with:
          # Your GitHub token with required scopes
          token: ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}

          # Options
          user: ${{ env.GH_USERNAME }}
          template: classic
          base: header, repositories, metadata
          filename: assets/github-metrics.svg
          config_timezone: ${{ env.GH_TIMEZONE }}

          # Repositories configuration
          repositories_forks: yes
          repositories_affiliations: owner, collaborator, organization_member
          repositories_batch: 100

          # Disable activity to avoid occasional API edge errors
          plugin_activity: no

          # Languages plugin (keep only most-used)
          plugin_languages: yes
          plugin_languages_ignored: html, css, tex, less, dockerfile, makefile, qmake, lex, cmake, shell, gnuplot
          plugin_languages_limit: 8
          plugin_languages_sections: most-used
          plugin_languages_colors: github
          plugin_languages_threshold: 0%
          plugin_languages_details: bytes-size, percentage, lines
          plugin_languages_analysis_timeout: 15

          # Commit calendar inline in this SVG
          plugin_isocalendar: yes
          plugin_isocalendar_duration: full-year

          # Additional plugins off for stability
          plugin_followup: no
          plugin_gists: no

      # Consolidated into one render; removed extra SVG renders

      - name: Generate README from template (Python)
        run: |
          python scripts/generate_readme.py
          
      - name: Check for changes
        id: git-check
        run: |
          git add README.md assets/github-metrics.svg || true
          if git diff --cached --exit-code; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi
          
      - name: Commit and push updated files
        if: steps.git-check.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md assets/github-metrics.svg || true
          git commit -m "üîÑ Auto-update profile content
          
          ‚ú® Updated:
          - GitHub metrics SVG (assets/) and README.md
          
          Generated: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" || echo "No changes to commit"
          
          # Push with retry logic
          for i in {1..3}; do
            if git push; then
              echo "‚úÖ Push successful on attempt $i"
              break
            else
              echo "‚ö†Ô∏è Push failed on attempt $i, retrying..."
              git fetch origin
              git pull --rebase origin main || git pull --rebase origin master || true
              sleep 5
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}